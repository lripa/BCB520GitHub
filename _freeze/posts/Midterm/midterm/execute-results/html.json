{
  "hash": "6082b8c3fc1973eefad30387d5d9e2a6",
  "result": {
    "markdown": "---\ntitle: “BCB 520 - Midterm Portfolio Post”\n\nsubtitle: “Midterm Assginments”\n\nauthor: “Lucas”\n\ndate: March 28, 2024  \n\nimage: \"Grants.png\" \n\ncategories: [Midtem, DataViz]\n\ncode-fold: true\n\ncode-tools: true\n\ndescription: “Midterm 1, finding out how well/bad are we doing with grants”\n---\n\n\n## Preamble\n\n**The main goal of this midterm is to assess the University of Idaho's performance regarding awarded grants and how it compares to other geographically close universities. The funding agencies are: The National Science Foundation, The National Institutes of Health, The Department of Energy, and The US Department of Agriculture.**\n\n**We have been provided with several data sets from four different funding agencies. A quick overview of each funding agency is provided below:**\n\n**1.- Department of Energy (DOE)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\ntry({\n  DOE <- read_xlsx(\"DOEawards.xlsx\")\n  \n  DOE_UI <- DOE %>% \n    dplyr::filter(Institution == 'Regents of the University of Idaho')\n  \n  DOE_UIFiltered <- DOE_UI %>%\n    select(Title, Institution, PI, Status, `Program Office`, `Start Date`, `End Date`, `Amount Awarded to Date`)\n  \n  # Display the table\n  knitr::kable(head(DOE_UIFiltered))\n}, silent = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...27`\n```\n:::\n\n::: {.cell-output-display}\n|Title                                                                                                                     |Institution                        |PI                    |Status |Program Office                                |Start Date |End Date   | Amount Awarded to Date|\n|:-------------------------------------------------------------------------------------------------------------------------|:----------------------------------|:---------------------|:------|:---------------------------------------------|:----------|:----------|----------------------:|\n|Nuclear Theory at the University of Idaho                                                                                 |Regents of the University of Idaho |Sammarruca, Francesca |Active |Office of Nuclear Physics                     |12/01/2021 |11/30/2024 |                1812000|\n|Converting methoxy groups on lignin-derived aromatics from a toxic hurdle to a useful resource: a systems-driven approach |Regents of the University of Idaho |Marx, Christopher     |Active |Office of Biological & Environmental Research |09/01/2021 |08/31/2024 |                1404162|\n|Integrative Imaging of Plant Roots during Symbiosis with Mycorrhizal Fungi                                                |Regents of the University of Idaho |Vasdekis, Andreas     |Active |Office of Biological & Environmental Research |08/15/2021 |08/14/2024 |                1519359|\n|Nutrient and Fine Sediment Transport Driven by Perturbations in River Bed Movement                                        |Regents of the University of Idaho |Yager, Elowyn         |Active |Office of Biological & Environmental Research |09/01/2020 |08/31/2024 |                 603903|\n:::\n:::\n\n\n**2.- The National Institutes of Health (NIH)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\n\n# Attempt to read the Excel file and process it\ntry({\n  # Read the Excel file into a data frame\n  NIH <- read_xlsx(\"NIH.xlsx\")\n  \n  # Filter and select specific columns from the NSF data frame\n  NIH_Filtered <- NIH %>%\n    select(contact_pi_name, award_amount, budget_start)\n  \n  # Display the table using knitr::kable\n  knitr::kable(head(NIH_Filtered))\n}, silent = TRUE)\n```\n\n::: {.cell-output-display}\n|contact_pi_name       | award_amount|budget_start         |\n|:---------------------|------------:|:--------------------|\n|MCGUIRE, MICHELLE KAY |      2354626|2024-03-11T12:03:00Z |\n|WILLIAMS, JANET E.    |       461621|2024-01-15T12:01:00Z |\n|CHEN, YIMIN           |       162320|2024-01-15T12:01:00Z |\n|LANE, GINNY           |       153322|2024-01-15T12:01:00Z |\n|MCGUIRE, MICHELLE KAY |       300000|2024-01-15T12:01:00Z |\n|MCGUIRE, MICHELLE KAY |       946131|2024-01-15T12:01:00Z |\n:::\n:::\n\n\n**3.- Department of Agriculture (NIFA)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(knitr)\nUSDA_UI  <- read.csv(\"USDAtoUI.csv\")\nknitr::kable(head(USDA_UI))\n```\n\n::: {.cell-output-display}\n|Award.Date |Grant.Number     |Proposal.Number |Grant.Title |State.Name |Grantee.Name               | Award.Dollars|Program.Name |Program.Area.Name |\n|:----------|:----------------|:---------------|:-----------|:----------|:--------------------------|-------------:|:------------|:-----------------|\n|2010-09-30 |2010-48679-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |          7495|N/A          |N/A               |\n|2009-09-30 |2009-48679-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |          6813|N/A          |N/A               |\n|2008-09-30 |2008-48679-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |          8524|N/A          |N/A               |\n|2003-09-30 |2003-48604-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |          1097|N/A          |N/A               |\n|2010-09-30 |2010-48024-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |         11997|N/A          |N/A               |\n|2009-09-30 |2009-48024-01200 |N/A             |N/A         |IDAHO      |SAES - UNIVERSITY OF IDAHO |         14990|N/A          |N/A               |\n:::\n:::\n\n\n**4.- The National Science Foundation (NSF)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\n\n# Attempt to read the Excel file and process it\ntry({\n  # Read the Excel file into a data frame\n  NSF <- read_xlsx(\"NSFtoUI.xlsx\")\n  \n  # Filter and select specific columns from the NSF data frame\n  NSF_Filtered <- NSF %>%\n    select(pdPIName, startDate, expDate, estimatedTotalAmt)\n  \n  # Display the table using knitr::kable\n  knitr::kable(head(NSF_Filtered))\n}, silent = TRUE)\n```\n\n::: {.cell-output-display}\n|pdPIName                   |startDate  |expDate    |estimatedTotalAmt |\n|:--------------------------|:----------|:----------|:-----------------|\n|Dave Lien                  |04/01/2024 |03/31/2026 |628415.00         |\n|Kristopher V Waynant       |04/01/2024 |03/31/2027 |456051.00         |\n|Tara Hudiburg              |03/01/2024 |08/31/2025 |1000000.00        |\n|Julie M Amador             |12/01/2023 |11/30/2027 |1179977.00        |\n|Esteban A Hernandez Vargas |11/01/2023 |10/31/2025 |250000.00         |\n|Lilian Alessa              |10/01/2023 |09/30/2027 |2435509.00        |\n:::\n:::\n\n\n## Data Dictionary table\n\nIn general all the data sets shares the same variables with different names. The most commonly used ones are summarized in the table below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(knitr)\ndatatable  <- read_xlsx(\"DataDictionary.xlsx\")\nknitr::kable(head(datatable))\n```\n\n::: {.cell-output-display}\n|Attribute   |Description                  |Type      |\n|:-----------|:----------------------------|:---------|\n|PI          |Principal Investigator       |Character |\n|Institution |University/instiution  name  |Character |\n|Start date  |Date where the award started |Date      |\n|End date    |Date where the award ends    |Date      |\n|Code        |Internal code of the award   |Numeric   |\n|Amount      |Amount of money awarded      |Numeric   |\n:::\n:::\n\n\n## QUESTION 1:\n\nProvide a visualization that shows our active awards from each sponsor. I need to see their start date and end date, the amount of the award, and the name of the Principal Investigator. I’m really interested in seeing how far into the future our current portfolio will exist. Are there a bunch of awards about to expire? Are there a bunch that just got funded and will be active for a while? Does this vary across sponsors?\n\n**Lets take a look at historical data:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\nfunding_data <- read_xlsx(\"UIawards2.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Count the unique PIs per agency\npi_count_per_agency <- funding_data %>%\n  group_by(Agency) %>%\n  summarise(PI_Count = n_distinct(PI))\n\n# Filter for the specific agencies if the dataset contains more agencies\npi_count_per_agency <- pi_count_per_agency %>%\n  filter(Agency %in% c(\"NSF\", \"NIH\", \"DOE\"))\n\n# Create the bar chart\nggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Total number of PIs Per Funding Agency in UofI recent history\",\n       x = \"Agency\",\n       y = \"Number of PIs\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n**In general NSF seems to be the funding agency with the most PIs in UofI history. DOE is the area where UofI can grow the most, and more effort should be invested into.**\n\n```         \n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Read data from an Excel file\nUSDA10 <- read_xlsx(\"USDA10UI.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Convert start to Date objects\nUSDA10$start <- as.Date(USDA10$start, format = \"%m/%d/%Y\")\n\n# Handle end date: Assuming you have only the year, create a Date object for December 31st of that year\nUSDA10$end <- as.Date(paste0(USDA10$end, \"-12-31\"), format = \"%Y-%m-%d\")\n\n# Create the Gantt chart\nggplot(USDA10, aes(y = Agency, x = start, xend = end, yend = Agency)) +\n  geom_segment(size = 10, color = \"green\") + # Adjust the size as needed\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\", limits = c(as.Date(\"2021-01-01\"), as.Date(\"2029-01-01\"))) +\n  labs(title = \"10 years of active USDA funding\",\n       x = \"Timeline\",\n       y = \"Agency\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 166 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Read data from an Excel file\nDOE10 <- read_xlsx(\"DOE10UI.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Convert start and end to Date objects\n# Assuming your Excel file has columns named 'start' and 'end'\nDOE10$start <- as.Date(DOE10$start, format = \"%m/%d/%Y\")\nDOE10$end <- as.Date(DOE10$end, format = \"%m/%d/%Y\")\n\n# Create the Gantt chart\nggplot(DOE10, aes(y = Agency, x = start, xend = end, yend = Agency)) +\n  geom_segment(size = 20, color = \"black\") + # Use linewidth instead of size\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\", limits = c(as.Date(\"2021-01-01\"), as.Date(\"2029-01-01\"))) +\n  labs(title = \"10 years of active DOE funding\",\n       x = \"Timeline\",\n       y = \"Agency\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(RColorBrewer)\n\n\n# Aggregate data to get the total amount per PI and filter out amounts smaller than 200000\ntotal_amount_per_PI <- DOE10 %>%\n  group_by(PI) %>%\n  summarise(TotalAmount = sum(Amount, na.rm = TRUE)) %>%\n  filter(TotalAmount >= 200000) %>%  # Filter step added here\n  arrange(desc(TotalAmount))\n\nggplot(total_amount_per_PI, aes(x = PI, y = TotalAmount / 1e6)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"DOE Total Funding per PI in the Last 10 Years\",\n       y = \"Total Funding Amount (USD Millions)\",\n       x = \"Principal Investigator\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate X-axis labels for readability\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Read data from an Excel file\nNSF10 <- read_xlsx(\"NSF10UI.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Convert start and end to Date objects\n# Assuming your Excel file has columns named 'start' and 'end'\nNSF10$start <- as.Date(NSF10$start, format = \"%m/%d/%Y\")\nNSF10$end <- as.Date(NSF10$end, format = \"%m/%d/%Y\")\n\n# Create the Gantt chart\nggplot(NSF10, aes(y = Agency, x = start, xend = end, yend = Agency)) +\n  geom_segment(size = 20, color = \"red\") + # Use linewidth instead of size\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\", limits = c(as.Date(\"2021-01-01\"), as.Date(\"2029-01-01\"))) +\n  labs(title = \"10 years of active NSF funding\",\n       x = \"Timeline\",\n       y = \"Agency\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 81 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(RColorBrewer)\n\nNSF10 <- read_xlsx(\"NSF10UI.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Aggregate data to get the total amount per PI and filter out amounts smaller than 200000\ntotal_amount_per_PI <- NSF10 %>%\n  group_by(PI) %>%\n  summarise(TotalAmount = sum(Amount, na.rm = TRUE)) %>%\n  filter(TotalAmount >= 200000) %>%  # Filter step added here\n  arrange(desc(TotalAmount))\n\nggplot(total_amount_per_PI, aes(x = PI, y = TotalAmount / 1e6)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"NSF Total Funding per PI in the Last 10 Years\",\n       y = \"Total Funding Amount (USD Millions)\",\n       x = \"Principal Investigator\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate X-axis labels for readability\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\ndf <- read_xlsx(\"UIawards.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Assuming your dataset is named df\n# Clean 'Agency' data (remove leading/trailing spaces, check for case sensitivity)\ndf$Agency <- as.character(trimws(df$Agency))\n\n# Convert 'start' and 'end' columns to Date format\ndf$start <- as.Date(df$start, format = \"%Y-%m-%d\")\ndf$end <- as.Date(df$end, format = \"%Y-%m-%d\")\n\n# Create a timeline that spans 10 years back and 10 years forward from today\ntimeline_start <- Sys.Date() - years(10)\ntimeline_end <- Sys.Date() + years(10)\n\n# Plotting\nggplot(df, aes(y = factor(Agency, levels = unique(Agency)), x = start, xend = end, yend = factor(Agency, levels = unique(Agency)))) +\n  geom_segment(size = 20, color = \"blue\") +  # Adjust size and color as needed\n  scale_x_date(limits = c(timeline_start, timeline_end), date_breaks = \"1 year\", date_labels = \"%Y\") +\n  labs(title = \"10 years of Active NIH  Timeline\",\n       x = \"Year\",\n       y = \"Agency\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 7),\n        panel.grid.major.x = element_line(color = \"grey80\"),\n        panel.grid.minor.x = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.y = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 74 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(RColorBrewer)\n\nNIH10 <- read_xlsx(\"NIH10UI.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...4`\n• `` -> `...6`\n```\n:::\n\n```{.r .cell-code}\n# Aggregate data to get the total amount per PI and filter out amounts smaller than 200000\ntotal_amount_per_PI <- NIH10 %>%\n  group_by(PI) %>%\n  summarise(TotalAmount = sum(Amount, na.rm = TRUE)) %>%\n  filter(TotalAmount >= 200000) %>%  # Filter step added here\n  arrange(desc(TotalAmount))\n\nggplot(total_amount_per_PI, aes(x = PI, y = TotalAmount / 1e6)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"NIH Total Funding per PI in the Last 10 Years\",\n       y = \"Total Funding Amount (USD Millions)\",\n       x = \"Principal Investigator\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate X-axis labels for readability\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n**According to the plotted data, NSF and NIH appear to have secured grants into the furthest future, (2028-2029). DOE has the largest grow potential, since just 4 PIs have grants.**\n\n## QUESTION 3:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ggplot2)\n\nBU <- read_xlsx(\"NIH.xlsx\")\n\n# Use 'BU' instead of 'df' for operations\nselected_universities <- BU %>%\n  filter(organization.org_name %in% c(\"BOISE STATE UNIVERSITY\", \"UNIVERSITY OF IDAHO\")) %>%\n  group_by(organization.org_name) %>%\n  summarise(total_award_amount = sum(award_amount, na.rm = TRUE))\n\n# Create the bar chart\nggplot(selected_universities, aes(x = organization.org_name, y = total_award_amount, fill = organization.org_name)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Total Award Amount by University NIH\",\n       x = \"University\",\n       y = \"Total Award Amount NIH\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"BOISE STATE UNIVERSITY\" = \"blue\", \"UNIVERSITY OF IDAHO\" = \"gold\"))\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Lets focus on USDA grants, since I'm in CALS, it makes sense to take a deeper look into USDA.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Read the CSV file\ndata <- read_csv(\"USDAallU.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2314 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Award Date, Grant Number, Proposal Number, Grant Title, State Name,...\ndbl (1): Award Dollars\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Convert 'Award Date' to Date object using correct format and filter data from 2014 to 2024\ndata <- data %>%\n  mutate(AwardDate = mdy(`Award Date`)) %>%\n  filter(AwardDate >= as.Date(\"2014-01-01\") & AwardDate <= as.Date(\"2024-12-31\"))\n\n# Aggregate data to get the total Award Dollars for each Grantee Name\ntotal_award_per_grantee <- data %>%\n  group_by(`Grantee Name`) %>%\n  summarise(TotalAwardDollars = sum(`Award Dollars`, na.rm = TRUE)) %>%\n  arrange(desc(TotalAwardDollars)) # Optional: arrange in descending order of total award dollars\n# Assuming total_award_per_grantee is already created from previous steps\n\n# Convert Grantee Name to a factor (if not already)\ntotal_award_per_grantee$`Grantee Name` <- factor(total_award_per_grantee$`Grantee Name`)\n\n# Assuming custom_colors is correctly mapped to your Grantee Names\ncustom_colors <- c(\"Boise State University\" = \"blue\", \n                   \"University of Idaho\" = \"gold\", \n                   \"Washington State University\" = \"red\", \n                   \"University of Montana\" = \"tan\")\n\n\nggplot(total_award_per_grantee, aes(x = reorder(`Grantee Name`, TotalAwardDollars), y = TotalAwardDollars / 1e6, fill = `Grantee Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = c(\"Boise State University\" = \"blue\", \n                   \"University of Idaho\" = \"gold\", \n                   \"Washington State University\" = \"red\", \n                   \"University of Montana\" = \"tan\")) +\n  labs(title = \"USDA Total Award Dollars per University (2014-2024)\",\n       x = \"Univeristy\",\n       y = \"Total Award Dollars (Millions USD)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))  # For better readability of Grantee Names\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Read the data\ndata <- read_csv(\"USDAallU.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2314 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Award Date, Grant Number, Proposal Number, Grant Title, State Name,...\ndbl (1): Award Dollars\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Prepare the data by grouping and summarising\ngrants_per_grantee <- data %>%\n  group_by(`Grantee Name`) %>%\n  summarise(NumberOfGrants = n()) %>%\n  arrange(desc(NumberOfGrants))  # Optional: arrange in descending order of number of grants\n\n# Define custom colors for specific Grantee Names\ncustom_colors <- c(\"Boise State University\" = \"blue\", \n                   \"University of Idaho\" = \"gold\", \n                   \"Washington State University\" = \"red\", \n                   \"University of Montana\" = \"tan\")\n\n# Create the bar graph with custom colors\nggplot(grants_per_grantee, aes(x = reorder(`Grantee Name`, NumberOfGrants), y = NumberOfGrants, fill = `Grantee Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = custom_colors) +  # Apply custom colors\n  labs(title = \"Number of Grants per Grantee\",\n       x = \"Grantee Name\",\n       y = \"Number of Grants\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))  # Rotate X-axis labels for better readability\n```\n\n::: {.cell-output-display}\n![](midterm_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Conclusions\n\n**Let me start by saying that the 80/20 rule is completely accurate. I probably spent more than 80% of the time cleaning, merging, and generally preparing the appropriate data sets to produce these few data visualizations. There’s no convention among funding agencies on how they report their data; this would make things way easier for universities and institutions to have an idea of how they are doing in comparison to the rest.**\n\n**DOE shows the largest growing potential, with just 4 PIs; there’s a big opportunity to grow.**\n\n**UofI has a solid funding history with NIH with a few anchor PIs that got large total amounts.**\n\n**In general, UofI is doing well, especially with USDA. Considering its size (around 12,000 students), UofI is comparable to Montana State (10,000 students), and the data shows it; numbers are similar for USDA. WSU (23,000 students) is significantly larger and it makes sense that it got more USDA projects. Boise State (23,000 students) is not an agricultural sciences-based university, but it is as large as WSU, so if they were to get into agricultural sciences, they would certainly be a threat to UofI’s USDA funding.**\n\n**What I learned is that these types of analyses are way more complicated than they look. Choosing the right variables and presenting the data in a meaningful way is critical to arriving at the right conclusions. Also, since there’s a significant amount of data wrangling involved, the chances of making a mistake can’t be overlooked, so a quality assessment is mandatory to double-check for any possible mistakes.**\n",
    "supporting": [
      "midterm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}