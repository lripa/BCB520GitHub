{
  "hash": "0998a3cfc8c6f4c1217b0d7c0ebddfc0",
  "result": {
    "markdown": "---\ntitle: “ASSIGNMENT 4”\n\nsubtitle: “Marks and Channels”\n\nauthor: “Lucas Ripa”\n\ndate: “2024-02-07”\n\ncategories: [Assignment, DataViz]\n\nimage: “some fun image you put in that new directory.png”\n\ncode-fold: true\n\ncode-tools: true\n\ndescription: “A clever description that describes the stuff”\n---\n\n\n## Let's try some bar graphs:\n\nWhat I did here was to prepare a separate bar graph for each evaluation date: before the application of the insecticides, 7 days post-application (DPA), 14 DPA, 21 DPA, 28 DPA, and 35 DPA. Upon examining the graphs, the weevil population appears to remain quite low even at 35 DPA. A specific color was selected for each treatment and maintained as a color code for all the graphs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nWeevils <- read_excel(\"~/Mi unidad/Uidaho/Clases/PhD/Spring 2024/BCB 520/Data/Weevils.xlsx\")\nhead(Weevils)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  Treatment Replicate `Insecticide Name` Before `7 dpa` `14 dpa` `21 dpa`\n      <dbl>     <dbl> <chr>               <dbl>   <dbl>    <dbl>    <dbl>\n1         0         1 Control                11       3        5        2\n2         0         2 Control                 4       4        4        3\n3         0         3 Control                16       6        7        3\n4         0         4 Control                 5       3        1        3\n5         0         5 Control                10       6        7        4\n6         0         6 Control                 2       5        2        4\n# ℹ 2 more variables: `28 dpa` <dbl>, `35 dpa` <dbl>\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nBmeans <-Weevils %>%\n  group_by(`Insecticide Name`) %>%\n  summarise(AVG = mean(Before),\n            AVG1 = mean(`7 dpa`, na.rm = TRUE), AVG2 = mean(`14 dpa`, na.rm = TRUE), AVG3 = mean(`21 dpa`, na.rm = TRUE), AVG4 = mean(`28 dpa`, na.rm = TRUE), AVG5 = mean(`35 dpa`, na.rm = TRUE) )\nlibrary(ggplot2)\n# Example with a custom color palette\nmy_colors <- c(\"green\", \"cyan\", \"blue\", \"darkblue\", \"gold\", \"black\")\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant before treatments\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG1, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant 7 DPA\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG2, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant 14 DPA\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG3, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant 21 DPA\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG4, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant 28 DPA\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-5.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Bmeans, aes(x = `Insecticide Name`, y = AVG5, fill = `Insecticide Name`)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = my_colors) +\n  labs(title = \"Mean weevils per plant 35 DPA\",\n       x = \"Insecticides\",\n       y = \"Mean weevils/Plant\") +\n  theme(axis.text.x = element_text(angle = 10, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-6.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}