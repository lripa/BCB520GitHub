library(dplyr)
library(ggplot2)
library(lubridate)
grants_per_grantee <- data%>%
group_by(Grantee Name) %>%
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
data <- read_csv("USDAallU.csv")
grants_per_grantee <- data %>%
group_by(Grantee Name) %>%
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read the data
data <- read_csv("USDAallU.csv")
# Prepare the data by grouping and summarising
grants_per_grantee <- data %>%
group_by(`Grantee Name`) %>%  # Corrected: backticks around Grantee Name
summarise(NumberOfGrants = n()) %>%
arrange(desc(NumberOfGrants))  # Optional: arrange in descending order of number of grants
# Create the bar graph
ggplot(grants_per_grantee, aes(x = reorder(`Grantee Name`, NumberOfGrants), y = NumberOfGrants, fill = `Grantee Name`)) +
geom_bar(stat = "identity") +
labs(title = "Number of Grants per Grantee",
x = "Grantee Name",
y = "Number of Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))  # Rotate X-axis labels for better readability
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read the data
data <- read_csv("USDAallU.csv")
# Prepare the data by grouping and summarising
grants_per_grantee <- data %>%
group_by(`Grantee Name`) %>%
summarise(NumberOfGrants = n()) %>%
arrange(desc(NumberOfGrants))  # Optional: arrange in descending order of number of grants
# Define custom colors for specific Grantee Names
custom_colors <- c("Boise State University" = "blue",
"University of Idaho" = "gold",
"Washington State University" = "red",
"University of Montana" = "tan")
# Create the bar graph with custom colors
ggplot(grants_per_grantee, aes(x = reorder(`Grantee Name`, NumberOfGrants), y = NumberOfGrants, fill = `Grantee Name`)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = custom_colors) +  # Apply custom colors
labs(title = "Number of Grants per Grantee",
x = "Grantee Name",
y = "Number of Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =
# Load necessary libraries
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read the data
data <- read_csv("USDAallU.csv")
# Prepare the data by grouping and summarising
grants_per_grantee <- data %>%
group_by(`Grantee Name`) %>%
summarise(NumberOfGrants = n()) %>%
arrange(desc(NumberOfGrants))  # Optional: arrange in descending order of number of grants
# Define custom colors for specific Grantee Names
custom_colors <- c("Boise State University" = "blue",
"University of Idaho" = "gold",
"Washington State University" = "red",
"University of Montana" = "tan")
# Create the bar graph with custom colors
ggplot(grants_per_grantee, aes(x = reorder(`Grantee Name`, NumberOfGrants), y = NumberOfGrants, fill = `Grantee Name`)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = custom_colors) +  # Apply custom colors
labs(title = "Number of Grants per Grantee",
x = "Grantee Name",
y = "Number of Grants") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))  # Rotate X-axis labels for better readability
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read data from an Excel file
USDA10 <- read_xlsx("USDA10UI.xlsx")
# Convert start to Date objects
USDA10$start <- as.Date(USDA10$start, format = "%m/%d/%Y")
# Handle end date: Assuming you have only the year, create a Date object for December 31st of that year
USDA10$end <- as.Date(paste0(USDA10$end, "-12-31"), format = "%Y-%m-%d")
# Create the Gantt chart
ggplot(USDA10, aes(y = Agency, x = start, xend = end, yend = Agency)) +
geom_segment(size = 10, color = "green") + # Adjust the size as needed
scale_x_date(date_breaks = "1 year", date_labels = "%Y", limits = c(as.Date("2021-01-01"), as.Date("2029-01-01"))) +
labs(title = "10 years of active USDA funding",
x = "Timeline",
y = "Agency") +
theme_minimal() +
theme(legend.position = "bottom")
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read data from an Excel file
USDA10 <- read_xlsx("USDA10UI.xlsx")
# Convert start to Date objects
USDA10$start <- as.Date(USDA10$start, format = "%m/%d/%Y")
# Handle end date: Assuming you have only the year, create a Date object for December 31st of that year
USDA10$end <- as.Date(paste0(USDA10$end, "-12-31"), format = "%Y-%m-%d")
# Create the Gantt chart
ggplot(USDA10, aes(y = Agency, x = start, xend = end, yend = Agency)) +
geom_segment(size = 10, color = "green") + # Adjust the size as needed
scale_x_date(date_breaks = "1 year", date_labels = "%Y", limits = c(as.Date("2021-01-01"), as.Date("2029-01-01"))) +
labs(title = "10 years of active USDA funding",
x = "Timeline",
y = "Agency") +
theme_minimal() +
theme(legend.position = "bottom")
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
# Read data from an Excel file
USDA10 <- read_xlsx("USDA10UI.xlsx")
# Convert start to Date objects
USDA10$start <- as.Date(USDA10$start, format = "%m/%d/%Y")
# Handle end date: Assuming you have only the year, create a Date object for December 31st of that year
USDA10$end <- as.Date(paste0(USDA10$end, "-12-31"), format = "%Y-%m-%d")
# Create the Gantt chart
ggplot(USDA10, aes(y = Agency, x = start, xend = end, yend = Agency)) +
geom_segment(size = 10, color = "green") + # Adjust the size as needed
scale_x_date(date_breaks = "1 year", date_labels = "%Y", limits = c(as.Date("2021-01-01"), as.Date("2029-01-01"))) +
labs(title = "10 years of active USDA funding",
x = "Timeline",
y = "Agency") +
theme_minimal() +
theme(legend.position = "bottom")
library(ggplot2)
library(dplyr)
library(lubridate)
df <- read_xlsx("UIawards.xlsx")
# Assuming your dataset is named df
# Clean 'Agency' data (remove leading/trailing spaces, check for case sensitivity)
df$Agency <- as.character(trimws(df$Agency))
# Convert 'start' and 'end' columns to Date format
df$start <- as.Date(df$start, format = "%Y-%m-%d")
df$end <- as.Date(df$end, format = "%Y-%m-%d")
# Create a timeline that spans 10 years back and 10 years forward from today
timeline_start <- Sys.Date() - years(10)
timeline_end <- Sys.Date() + years(10)
# Plotting
ggplot(df, aes(y = factor(Agency, levels = unique(Agency)), x = start, xend = end, yend = factor(Agency, levels = unique(Agency)))) +
geom_segment(size = 20, color = "blue") +  # Adjust size and color as needed
scale_x_date(limits = c(timeline_start, timeline_end), date_breaks = "1 year", date_labels = "%Y") +
labs(title = "10 years Timeline",
x = "Year",
y = "Agency") +
theme_minimal() +
theme(axis.text.y = element_text(size = 7),
panel.grid.major.x = element_line(color = "grey80"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(RColorBrewer)
NIH10 <- read_xlsx("NIH10UI.xlsx")
# Aggregate data to get the total amount per PI and filter out amounts smaller than 200000
total_amount_per_PI <- NIH10 %>%
group_by(PI) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE)) %>%
filter(TotalAmount >= 200000) %>%  # Filter step added here
arrange(desc(TotalAmount))
ggplot(total_amount_per_PI, aes(x = PI, y = TotalAmount / 1e6)) +
geom_bar(stat = "identity") +
labs(title = "NIH Total Funding per PI in the Last 10 Years",
y = "Total Funding Amount (USD Millions)",
x = "Principal Investigator") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate X-axis labels for readability
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards2.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Agency in UofI recent history",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set2")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI recent history",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set2")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
# Assuming 'funding_data' is already loaded from "UIawards3.xlsx"
# Make sure your dataset has a column for the funding amount, e.g., "FundingAmount"
# Sum the total funding amount per agency
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(FundingAmount, na.rm = TRUE))
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
# Assuming 'funding_data' is already loaded from "UIawards3.xlsx"
# Make sure your dataset has a column for the funding amount, e.g., "FundingAmount"
# Sum the total funding amount per agency
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE))
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart for total funding amount per agency
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Funding Amount Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Total Funding Amount") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
library(readxl)
library(dplyr)
library(ggplot2)
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE) / 1e6) # Convert to millions
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart for total funding amount per agency in USD millions
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Funding Amount Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Total Funding Amount (USD Millions)") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
# Assuming 'funding_data' is already loaded from "UIawards3.xlsx"
# Ensure your dataset has a column for the funding amount, e.g., "FundingAmount"
# Sum the total funding amount per agency and convert to millions
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE) / 1e6) # Convert to millions
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart for total funding amount per agency in USD millions
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Funding Amount Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Total Funding Amount (USD Millions)") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE) / 1e6) # Convert to millions
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart for total funding amount per agency in USD millions
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Funding Amount Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Total Funding Amount (USD Millions)") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE) / 1e6) # Convert to millions
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE", "USDA""))
# Create the bar chart for total funding amount per agency in USD millions
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
library(readxl)
library(dplyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggplot2)
funding_data <- read_xlsx("UIawards3.xlsx")
# Count the unique PIs per agency
pi_count_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(PI_Count = n_distinct(PI))
# Filter for the specific agencies if the dataset contains more agencies
pi_count_per_agency <- pi_count_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart
ggplot(pi_count_per_agency, aes(x = Agency, y = PI_Count, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total number of PIs Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Number of PIs") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
total_amount_per_agency <- funding_data %>%
group_by(Agency) %>%
summarise(TotalAmount = sum(Amount, na.rm = TRUE) / 1e6) # Convert to millions
# Filter for the specific agencies if the dataset contains more agencies
total_amount_per_agency <- total_amount_per_agency %>%
filter(Agency %in% c("NSF", "NIH", "DOE"))
# Create the bar chart for total funding amount per agency in USD millions
ggplot(total_amount_per_agency, aes(x = Agency, y = TotalAmount, fill = Agency)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Funding Amount Per Funding Agency in UofI since 1998",
x = "Agency",
y = "Total Funding Amount (USD Millions)") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
